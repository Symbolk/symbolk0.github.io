[{"title":"Tensorflow Installation（Tf敏捷安装）","date":"2017-04-04T06:18:05.000Z","path":"2017/04/04/Tensorflow-Installation/","text":"Tensorflow敏捷安装(Ubuntu16.04)有人说Ubuntu最大的缺点就是太灵活了，不像Windows一样一路无脑next，一个软件有n种安装方式却往往让人无所适从。安装Tf尤其痛苦，因此整理下自己的安装过程（支持GPU计算）。 首先要装很多Nvidia的东西：NVIDIA requirements to run TensorFlow with GPU support1, CUDA Toolkit（点击下载deb文件） 12345678910111213# Install repository meta-datasudo dpkg -i cuda-repo-&lt;distro&gt;_&lt;version&gt;_&lt;architecture&gt;.deb# Update the Apt repository cachesudo apt update# Install CUDAsudo apt install cuda# The PATH variable needs to include /usr/local/cuda-8.0/bin# To add this path to the PATH variable:$ export PATH=/usr/local/cuda-8.0/bin$&#123;PATH:+:$&#123;PATH&#125;&#125;# In addition, when using the runfile installation method, the LD_LIBRARY_PATH variable needs to contain /usr/local/cuda-8.0/lib64 on a 64-bit system, or /usr/local/cuda-8.0/lib on a 32-bit systemTo change the environment variables for 64-bit operating systems:$ export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64\\ $&#123;LD_LIBRARY_PATH:+:$&#123;LD_LIBRARY_PATH&#125; 2，cuDNN v5.1（NVIDIA CUDA® Deep Neural Network library (cuDNN)） 安装cudnn比较简单，简单地说，就是复制几个文件：库文件和头文件。将cudnn的头文件复制到cuda安装路径的include路径下，将cudnn的库文件复制到cuda安装路径的lib64路径下。 123456789101112131415161718#解压文件tar -zxvf cudnn-6.5-linux-x64-v2.tgz#切换路径cd cuda/lib64#复制lib文件到cuda安装路径下的lib64/sudo cp lib* /usr/local/cuda-8.0/lib64/#复制头文件cd ..cd cuda/includesudo cp cudnn.h /usr/local/cuda-8.0/include/#更新软连接cd /usr/local/cuda-8.0/lib64sudo rm -rf libcudnn.so libcudnn.so.6.5ls -alsudo ln -s libcundnn.so.8.0.51 libcudnn.so.5sudo ln -s libcundnn.so.8.0.51 libcudnn.so.8.0sudo ln -s libcundnn.so.8.0 libcudnn.so 3，NVIDIA CUDA Profile Tools Interface12345678910111213141516sudo apt install libcupti-dev``#### 好吧，一整理好像也不是很多，就是各种Google比较麻烦### 终于来到了安装TensorFlow的时刻```shsudo apt install python-pip python-devpip install tensorflow-gpu # 测试：python&gt;&gt;&gt; import tensorflow as tf&gt;&gt;&gt; hello = tf.constant('Hello, TensorFlow!')&gt;&gt;&gt; sess = tf.Session()&gt;&gt;&gt; print(sess.run(hello)) 参考链接：（https://www.tensorflow.org/install/install_linux ）","tags":[{"name":"Linux","slug":"Linux","permalink":"http://symbolk.com/tags/Linux/"}]},{"title":"My Ubuntu Config（个人Ubuntu开发环境配置）","date":"2017-04-02T11:37:45.000Z","path":"2017/04/02/My-Ubuntu-Config/","text":"因为经常重装电脑，把自己常用的Ubuntu开发环境配置套路放在这里back个up~ 系统篇123456789# 安装7zipsudo apt install 7zip-full# 解压7z x *.7z# 解压rar/zipsudo apt-get install rarsudo apt-get install unrarunrar e *.rarunzip *.zip Java篇1, /etc/profile: jdk及maven路径设置12345678JAVA_HOME=/usr/jdk/jdk1.8.0_74CLASS_PATH=.:$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jarPATH=$JAVA_HOME/bin:$PATHexport JAVA_HOME CLASS_PATH PATHMAVEN_HOME=/usr/bin/apache-maven-3.3.9export MAVEN_HOMEexport PATH=$&#123;PATH&#125;:$&#123;MAVEN_HOME&#125;/bin 别忘了：1$ source /etc/profile Javascript篇2, 安装git并配置123$ sudo apt-get install git -y$ git config --global user.name \"Your Name\"$ git config --global user.email \"email@example.com\" 3, 安装SublimeText31$ dpkg -i sublime_text.deb 4, 安装node.js1234567$ sudo apt-get install g++ $ sudo apt-get install libssl-dev$ wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz $ tar zxvf node-v0.8.16.tar.gz$ cd node-v $ ./configure $ make &amp;&amp; make install 或从Node.js官网下载 Linux Binary(x86/64):6.10.1 5, 安装shadowsocks与SwitchyOmega for Chrome1234pip install shadowsockssudo add-apt-repository ppa:hzwhuang/ss-qt5sudo apt-get updatesudo apt-get install shadowsocks-qt5 从SwitchyOmegaGithub下载.crx文件，拖入Chrome；设置自动代理规则列表网址为： https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt P.S. 详见另一篇Blog：Shadowsocks+BandwagonVPS在Linux中自动科学上网 Python篇6, 安装pip1$ apt install python-pip -y 7, 安装各种ML库12345678910# apt安装$ sudo apt-get install python-numpy $ sudo apt-get install python-scipy $ sudo apt-get install python-matplotlib $ sudo apt-get install python-pandas $ sudo apt-get install python-sklearn# pip安装$ sudo apt install python-pip -y$ pip install numpy scipy matplotlib$ sudo pip install -U scikit-learn 8, 安装绘图库12# 安装python tkintersudo apt install python-tk 9, 安装xgboost123456sudo apt install git build-essential python-dev python-setuptoolsgit clone --recursive https://github.com/dmlc/xgboostcd xgboostmake -j4cd python-package/sudo python setup.py install 各种测试python import xgboostimport numpy,…… 10， 安装Jupyter12345678910# 注意python2 和 3 的区别（pip3会安装给python3）pip install jupyter# command not found sudo vim /etc/profile# export PATH=$&#123;PATH&#125;:~/.local/binsource /etc/profilejupyter notebook# 配置jupyter notebook --generate-configvim ~/.jupyter/jupyter_notebook_config.py","tags":[{"name":"Linux","slug":"Linux","permalink":"http://symbolk.com/tags/Linux/"}]},{"title":"Hello Hexo","date":"2017-04-01T12:18:08.267Z","path":"2017/04/01/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]